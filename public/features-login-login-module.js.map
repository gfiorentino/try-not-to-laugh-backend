{"version":3,"sources":["./src/app/features/login/login-routing.module.ts","./src/app/features/login/login.module.ts","./src/app/features/login/login.component.ts","./src/app/features/login/login.component.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACJ;;;AAEnD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,+DAAc;KAC1B;CACF,CAAC;AAMK,MAAM,kBAAkB;;iGAAlB,kBAAkB;8JAAlB,kBAAkB,kBAHpB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,4DAAY;mIAEX,kBAAkB,uFAFnB,4DAAY;6FAEX,kBAAkB;cAJ9B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACdD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACI;AACS;AACkB;;AAcvE,MAAM,WAAW;;0FAAX,WAAW;gJAAX,WAAW,kBATb;YACP,4DAAY;YACZ,wEAAkB;YAClB,2FAAwB;SACzB;mIAKU,WAAW,mBAVP,+DAAc,aAE3B,4DAAY;QACZ,wEAAkB;QAClB,2FAAwB,aAGxB,+DAAc;6FAGL,WAAW;cAXvB,sDAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,+DAAc,CAAC;gBAC9B,OAAO,EAAE;oBACP,4DAAY;oBACZ,wEAAkB;oBAClB,2FAAwB;iBACzB;gBACD,OAAO,EAAE;oBACP,+DAAc;iBACf;aACF;;;;;;;;;;;;;;ACjBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgF;;;;;;;ICAhF,kFAA6D;;;;IAC7D,4EAA6C;IAArC,mTAAmB;IAAkB,gEAAK;IAAA,4DAAS;;ADUpD,MAAM,cAAc;IAKzB,YAAoB,qBAA4C,EAAU,GAAsB,EAAU,cAA8B;QAApH,0BAAqB,GAArB,qBAAqB,CAAuB;QAAU,QAAG,GAAH,GAAG,CAAmB;QAAU,mBAAc,GAAd,cAAc,CAAgB;QAHjI,YAAO,GAAG,KAAK,CAAC;IAGoH,CAAC;IAE5I,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACrE,IAAI,CAAC,cAAc,CAAC,mBAAmB,EAAE,CAAC;QAC5C,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;QACzB,IAAI,CAAC,qBAAqB,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE;YAC1C,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;QAC3B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;SAC5B;IACH,CAAC;IAED,OAAO;QACL,IAAI,CAAC,qBAAqB,CAAC,KAAK,EAAE,CAAC;IACrC,CAAC;;4EA3BU,cAAc;8FAAd,cAAc;QCX3B,4IAA6D;QAC7D,gHAA2D;;QADpC,6EAAa;QACP,0DAAc;QAAd,8EAAc;;6FDU9B,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACtC","file":"features-login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login.component';\nimport { LoginRoutingModule } from './login-routing.module';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    LoginRoutingModule,\n    MatProgressSpinnerModule\n  ],\n  exports: [\n    LoginComponent\n  ]\n})\nexport class LoginModule { }\n","import { ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs/internal/Subscription';\nimport { AuthenticationService } from 'src/app/core/services/auth/auth.service';\nimport { RoutingService } from 'src/app/core/services/routing/routing.service';\nimport { User } from 'src/app/shared/models/user';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n\n  public loading = false;\n  private subUser: Subscription;\n\n  constructor(private authenticationService: AuthenticationService, private cdr: ChangeDetectorRef, private routingService: RoutingService) {}\n\n  ngOnInit(): void {\n    this.subUser = this.authenticationService.currentUser.subscribe(user => {\n      this.routingService.demoCameraDetection();\n    });\n    this.loading = true;\n    this.cdr.detectChanges();\n    this.authenticationService.load().then(() => {\n      this.loading = false;\n      this.cdr.detectChanges();\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.subUser) {\n      this.subUser.unsubscribe();\n    }\n  }\n\n  onLogin(): void {\n    this.authenticationService.login();\n  }\n}\n","<mat-progress-spinner *ngIf=\"loading\"></mat-progress-spinner>\r\n<button (click)=\"onLogin()\" *ngIf=\"!loading\">Login</button>"],"sourceRoot":"webpack:///"}